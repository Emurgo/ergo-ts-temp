/**
 * Flowtype definitions for transaction
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import { ErgoBox } from "./ergoBox";
import { IIdObject } from "./IIdObject";
import { Input } from "./input";
declare export class Transaction mixins IIdObject {
  /**
   * @param boxesToSpend - boxes to spend
   * @param payloadOutputs - outputs without fee and change
   * @param fee - fee to pay
   */
  static fromOutputs(
    boxesToSpend: ErgoBox[],
    payloadOutputs: ErgoBox[],
    fee?: number
  ): Transaction;
  static formObject(obj: any): Transaction;
  inputs: Input[];
  dataInputs: Input[];
  outputs: ErgoBox[];
  timestamp?: number;
  confirmations?: number;
  headerId?: string;
  id?: string;
  constructor(
    inputs: Input[],
    outputs: ErgoBox[],
    dataInputs?: Input[],
    id?: string,
    timestamp?: number,
    headerId?: string,
    confirmationsCount?: number
  ): this;
  sign(sk: string): Transaction;
}
