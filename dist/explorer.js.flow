/**
 * Flowtype definitions for explorer
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

import { AxiosInstance, AxiosResponse } from "axios";
import { Address } from "./models/address";
import { ErgoBox } from "./models/ergoBox";
import { Transaction } from "./models/transaction";

/**
 * Class to interact with explorer
 */
declare export class Explorer {
  static +testnet: Explorer;
  static +mainnet: Explorer;
  +apiClient: AxiosInstance;
  url: string;
  timeout: number;
  headers: {
    "Content-Type": string,
    ...
  };
  constructor(url: string): this;
  getCurrentHeight(): Promise<number>;
  getUnspentOutputs(address: Address): Promise<ErgoBox[]>;
  getUnconfirmed(address?: Address): Promise<Transaction[]>;
  getTransactions(address: Address): Promise<Transaction[]>;
  getTokenInfo(tokenId: string): Promise<ErgoBox>;
  broadcastTx(signedTransaction: Transaction): Promise<AxiosResponse<any>>;
  postRequest(url: string, data: any): Promise<AxiosResponse>;
  getRequest(url: string): Promise<AxiosResponse<any>>;
}
